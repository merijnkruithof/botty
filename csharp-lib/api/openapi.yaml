openapi: 3.0.3
info:
  description: ""
  license:
    name: ""
  title: pegasus
  version: 0.1.0
servers:
- url: /
paths:
  /api/bots:
    get:
      description: Get all online bots including all user info.
      operationId: index
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BotsRequest'
        description: Payload to request bots based on the hotel
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AvailableBots'
          description: List of available bots
        "400":
          description: Bad request
      security:
      - api_key: []
      tags:
      - Bot
      - bot_controller
  /api/bots/{ticket}:
    get:
      description: Get a single bot's information.
      operationId: show
      parameters:
      - explode: false
        in: path
        name: ticket
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ShowBotRequest'
        description: Payload to request a single based on the hotel
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AvailableBots'
          description: The requested bot
        "400":
          description: Bad request
      security:
      - api_key: []
      tags:
      - Bot
      - bot_controller
components:
  schemas:
    AvailableBots:
      example:
        bots:
        - figure: figure
          gender: gender
          user_id: 0
          motto: motto
          sso_ticket: sso_ticket
          username: username
        - figure: figure
          gender: gender
          user_id: 0
          motto: motto
          sso_ticket: sso_ticket
          username: username
      properties:
        bots:
          items:
            $ref: '#/components/schemas/BotInfo'
          nullable: true
          type: array
      type: object
    BotInfo:
      example:
        figure: figure
        gender: gender
        user_id: 0
        motto: motto
        sso_ticket: sso_ticket
        username: username
      properties:
        figure:
          type: string
        gender:
          type: string
        motto:
          type: string
        sso_ticket:
          type: string
        user_id:
          format: int32
          minimum: 0
          type: integer
        username:
          type: string
      required:
      - figure
      - gender
      - motto
      - sso_ticket
      - user_id
      - username
      type: object
    BotsRequest:
      example:
        hotel: hotel
      properties:
        hotel:
          type: string
      required:
      - hotel
      type: object
    BulkUpdateResponse:
      properties:
        task_id:
          type: string
      required:
      - task_id
      type: object
    ShowBotRequest:
      example:
        hotel: hotel
      properties:
        hotel:
          type: string
      required:
      - hotel
      type: object
  securitySchemes:
    api_key:
      in: header
      name: x-auth-token
      type: apiKey

